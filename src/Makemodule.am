################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
program_libs = src/libfty_alert_engine.la ${project_libs}

# Programs need to link the c++ runtime if everything was compiled statically.
if !ENABLE_SHARED
program_libs += -lstdc++ -lm
endif

lib_LTLIBRARIES += src/libfty_alert_engine.la
pkgconfig_DATA = src/libfty_alert_engine.pc

include_HEADERS = \
    include/fty_alert_engine.h \
    include/filesystem.h \
    include/utils.h \
    include/autoconfig.h \
    include/fty_alert_engine_server.h \
    include/fty_alert_engine_library.h

src_libfty_alert_engine_la_SOURCES = \
    src/metriclist.cc \
    src/alertconfiguration.cc \
    src/luarule.cc \
    src/purealert.cc \
    src/rule.cc \
    src/thresholdrulecomplex.cc \
    src/filesystem.cc \
    src/utils.cc \
    src/autoconfig.cc \
    src/ruleconfigurator.cc \
    src/templateruleconfigurator.cc \
    src/fty_alert_engine_server.cc \
    src/platform.h

if ENABLE_DRAFTS
src_libfty_alert_engine_la_SOURCES += \
    src/fty_alert_engine_private_selftest.cc
endif

src_libfty_alert_engine_la_CPPFLAGS = ${AM_CPPFLAGS}
src_libfty_alert_engine_la_CXXFLAGS = ${AM_CXXFLAGS}

src_libfty_alert_engine_la_LDFLAGS = \
    -version-info @LTVER@ \
    $(LIBTOOL_EXTRA_LDFLAGS)

if ON_MINGW
src_libfty_alert_engine_la_LDFLAGS += \
    -no-undefined \
    -avoid-version
endif

if ON_CYGWIN
src_libfty_alert_engine_la_LDFLAGS += \
    -no-undefined \
    -avoid-version
endif

src_libfty_alert_engine_la_LIBADD = ${project_libs}

if WITH_SYSTEMD_UNITS
systemdsystemunit_DATA =
endif #WITH_SYSTEMD_UNITS

if ENABLE_FTY_ALERT_ENGINE
bin_PROGRAMS += src/fty-alert-engine
src_fty_alert_engine_CPPFLAGS = ${AM_CPPFLAGS}
src_fty_alert_engine_LDADD = ${program_libs}
src_fty_alert_engine_SOURCES = src/fty_alert_engine.cc
src_fty_alert_engine_config_DATA =
src_fty_alert_engine_config_DATA += src/fty-alert-engine.cfg
src_fty_alert_engine_configdir = $(sysconfdir)/fty-alert-engine
if WITH_SYSTEMD_UNITS
systemdsystemunit_DATA += src/fty-alert-engine.service
endif #WITH_SYSTEMD_UNITS
endif #ENABLE_FTY_ALERT_ENGINE

if ENABLE_FTY_ALERT_ENGINE_SELFTEST
check_PROGRAMS += src/fty_alert_engine_selftest
noinst_PROGRAMS += src/fty_alert_engine_selftest
src_fty_alert_engine_selftest_CPPFLAGS = ${AM_CPPFLAGS}
src_fty_alert_engine_selftest_LDADD = ${program_libs}
src_fty_alert_engine_selftest_SOURCES = src/fty_alert_engine_selftest.cc
endif #ENABLE_FTY_ALERT_ENGINE_SELFTEST

# define custom target for all products of /src
src:
	src/fty-alert-engine \
	src/fty_alert_engine_selftest \
	src/libfty_alert_engine.la

	cd $(srcdir); gsl -target:- project.xml

check-local: src/fty_alert_engine_selftest
	$(LIBTOOL) --mode=execute $(builddir)/src/fty_alert_engine_selftest

check-verbose: src/fty_alert_engine_selftest
	$(LIBTOOL) --mode=execute $(builddir)/src/fty_alert_engine_selftest -v

# Run the selftest binary under valgrind to check for memory leaks
memcheck: src/fty_alert_engine_selftest
	$(LIBTOOL) --mode=execute valgrind --tool=memcheck \
		--leak-check=full --show-reachable=yes --error-exitcode=1 \
		--suppressions=$(srcdir)/src/.valgrind.supp \
		$(builddir)/src/fty_alert_engine_selftest

# Run the selftest binary under valgrind to check for performance leaks
callcheck: src/fty_alert_engine_selftest
	$(LIBTOOL) --mode=execute valgrind --tool=callgrind \
		$(builddir)/src/fty_alert_engine_selftest

# Run the selftest binary under gdb for debugging
debug: src/fty_alert_engine_selftest
	$(LIBTOOL) --mode=execute gdb -q \
		$(builddir)/src/fty_alert_engine_selftest

# Run the selftest binary with verbose switch for tracing
animate: src/fty_alert_engine_selftest
	$(LIBTOOL) --mode=execute $(builddir)/src/fty_alert_engine_selftest -v

if WITH_GCOV
coverage: src/fty_alert_engine_selftest
	@echo "called configure --with-gcov"
	lcov --base-directory . --directory . --zerocounters -q
	$(MAKE) check
	lcov --base-directory . --directory . --capture -o coverage.info
	lcov --remove coverage.info "/usr*" -o coverage.info
	lcov --remove coverage.info "fty_alert_engine_selftest.c" -o coverage.info
	$(RM) -rf coverage/*
	genhtml -o coverage/ -t "fty-alert-engine test coverage" --num-spaces 4 coverage.info
else
coverage: src/fty_alert_engine_selftest
	@echo "call make clean && configure --with-gcov to enable code coverage"
	@exit 1
endif

################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
