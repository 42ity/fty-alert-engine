{
    "threshold": {
        "name"      : "phase_imbalance@__name__",
        "class"     : "TRANSLATE_LUA(Phase imbalance in PDU)",
        "hierarchy" : "power.phaseimbalance.epdu",
        "description"      : "TRANSLATE_LUA(Phase Imbalance for EPDU)",
        "categories"       : ["CAT_OTHER", "CAT_ALL"],
        "metrics"         : [ "realpower.output.L1", "realpower.output.L2", "realpower.output.L3" ],
        "assets"        : "__name__",
        "values_unit"    : "%",
        "values": [
            { "high_critical": "20"},
            { "high_warning": "10"} ],
        "results": [
            { "high_critical": { "action": [ ], "severity" : "CRITICAL", "description": "{\"key\" : \"TRANSLATE_LUA(Phase imbalance is critically high on {{ename}}.)\", \"variables\" : {\"ename\" : { \"value\" : \"__ename__\", \"assetLink\" : \"__name__\" } } }", "threshold_name" : "TRANSLATE_LUA(Phase imbalance is critically high on device)" }},
            { "high_warning": { "action": [ ], "severity" : "WARNING", "description": "{\"key\" : \"TRANSLATE_LUA(Phase imbalance is high on {{ename}}.)\", \"variables\" : {\"ename\" : { \"value\" : \"__ename__\", \"assetLink\" : \"__name__\" } } }", "threshold_name" : "TRANSLATE_LUA(Phase imbalance is high on device)" }} ],
        "evaluation": "function main(f1,f2,f3) local avg = (f1 + f2 + f3) / 3; local deviation = math.max (math.abs (f1 - avg), math.abs (f2 - avg), math.abs (f3 - avg)); local percentage = deviation / avg * 100; if (percentage > high_critical) then return HIGH_CRITICAL end; if (percentage > high_warning) then return HIGH_WARNING end; return OK; end"
    }
}
