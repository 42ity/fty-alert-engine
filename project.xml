<project
    name = "fty-alert-engine"
    description = "42ity service evaluating rules written in Lua and producing alerts"
    script = "zproject.gsl"
    email = "EatonIPCOpenSource@eaton.com"
    url = "https://42ity.org/"
    repo = "https://github.com/42ity/fty-alert-engine"
    license = "GPL-2.0+"
    >

    <target name = "debian" />
    <target name = "redhat" />
    <target name = "travis" travis_distcheck  = "1" />

    <include filename = "license.xml" />
    <version major = "1" minor = "0" patch = "0" />

    <use project = "malamute" />
    <use project = "fty-proto" libname = "libfty_proto" prefix="ftyproto"
        min_major = "0" min_minor = "0" min_patch = "0"
        repository = "https://github.com/42ity/fty-proto"
        test = "fty_proto_test">
        <use project = "malamute"/>
    </use>
    <!-- Note: the optional flag causes "configure" script to not fail
         if pkg-config metadata (or tests) do not succeed on a distro;
         the project build would fail if no LUA-5.1 library if present.
         This also causes some duplicates in generated code, but these
         "should" be harmless in practice. Also, these packages are not
         generated into the list of "required" for a build in spec/dsc
         files and have to be plugged there manually. -->
    <use project = "lua-5.1-redhat" libname = "lua" prefix="lua"
        optional = "1" am_lib_macro = "LUA_5_1"
        min_major = "5" min_minor = "1" mit_patch = "0"
        debian_name="" redhat_name="lua-devel"
        test = "lua_close"
    />
    <use project = "lua-5.1-debian" libname = "lua5.1" prefix="lua"
        optional = "1" am_lib_macro = "LUA_5_1"
        min_major = "5" min_minor = "1" mit_patch = "0"
        debian_name="liblua5.1-0-dev" redhat_name=""
        test = "lua_close"
    />
    <!-- alert engine uses patched cxxtools, point to 42ity fork instead -->
    <use project = "cxxtools" test="cxxtools::Utf8Codec::Utf8Codec" header="cxxtools/allocator.h"
        repository = "https://github.com/42ity/cxxtools"
        release = "42ity"
    />
    <class name = "metriclist" private="1">MetricList</class>
    <class name = "alertconfiguration" private="1" selftest = "0">alertconfiguration</class>
    <class name = "luarule" private="1" selftest = "0">luaRule</class>
    <class name = "purealert" private="1" selftest = "0">PureAlert</class>
    <class name = "rule" private="1" selftest = "0">Rule</class>
    <class name = "thresholdrulecomplex" private="1" selftest = "0">ThresholdRuleComplex</class>
    <class name = "fty_alert_engine_server" state = "stable" >Actor evaluating rules</class>
    <main name = "fty-alert-engine" service = "1" no_config = "1" >
        Daemon evaluating rules and producing alerts
        <extra type = "x-rules" path = "/var/lib/fty/fty_alert_engine" name = "warranty.rule" />
        <extra type = "systemd-tmpfiles" />
    </main>
</project>
