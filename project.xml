<project
    name = "fty-alert-engine"
    description = "42ity service evaluating rules written in Lua and producing alerts"
    script = "zproject.gsl"
    email = "EatonIPCOpenSource@eaton.com"
    url = "https://42ity.org"
    license = "GPL-2.0+"
    repository = "https://github.com/42ity/fty-alert-engine"
    >

    <target name = "debian" />
    <target name = "redhat" />
    <target name = "travis" >
        <!-- option name = "clangformat_implem" value = "autotools" / -->
        <option name = "use_cmake" value = "0" />
        <!-- option name = "clangformat_require_good" value = "1" / -->
        <option name = "clangformat_allow_failures" value = "1" />
        <option name = "use_pkg_deps_prereqs_source" value = "0" />
    </target>
    <target name = "jenkins" >
        <option name = "agent_label" value = "devel-image &amp;&amp; x86_64" />
        <option name = "triggers_pollSCM" value = "H/2 * * * *" />
        <option name = "test_cppcheck" value = "1" />
        <option name = "build_docs" value = "1" />
        <option name = "dist_docs" value = "1" />
        <option name = "check_sequential" value = "0" />
        <option name = "use_test_retry" value = "3" />
        <option name = "use_test_timeout" value = "30" />
        <option name = "use_deleteDir_rm_first" value = "1" />
        <!-- Note: Jenkinsfile is amended for longer test timeouts and 'rm -rf'
             before deleteDir() due to non-ASCII filenames used in tests.
             This selftest job generates files with non-ASCII names which
             upset the Jenkins remote file IO agent, in our version at least
         -->
    </target>

    <include filename = "license.xml" />
    <version major = "1" minor = "0" patch = "0" />
    <abi current = "0" revision = "0" age = "0" />

    <use project = "czmq"
        repository="https://github.com/42ity/czmq.git"
        release = "v3.0.2-FTY-master"
        min_major = "3" min_minor = "0" min_patch = "2" >

        <use project = "libzmq"
            repository="https://github.com/42ity/libzmq.git"
            release = "4.2.0-FTY-master" >

            <use project = "libsodium" prefix = "sodium"
                repository = "https://github.com/42ity/libsodium.git"
                release = "1.0.5-FTY-master"
                test = "sodium_init" />
        </use>
    </use>

    <use project = "malamute" min_major = "1" test = "mlm_server_test"
        repository="https://github.com/42ity/malamute.git"
        release = "1.0-FTY-master"
        />

    <use project = "fty-common-logging" libname = "libfty_common_logging" header="fty_log.h"
        repository = "https://github.com/42ity/fty-common-logging.git"
        release = "master"
        test = "fty_common_logging_selftest" >

        <use project = "log4cplus" header = "log4cplus/logger.h" test = "appender_test"
            repository = "https://github.com/42ity/log4cplus.git"
            release = "1.1.2-FTY-master"
            />
    </use>

    <use project = "fty-proto" libname = "libfty_proto" header="ftyproto.h" prefix="fty_proto"
    min_major = "1" min_minor = "0" min_patch = "0"
    repository = "https://github.com/42ity/fty-proto.git"
    release = "master"
    test = "fty_proto_test" >

        <use project = "czmq"
        repository="https://github.com/42ity/czmq.git"
        release = "v3.0.2-FTY-master"
        min_major = "3" min_minor = "0" min_patch = "2" >

            <use project = "libzmq"
            repository="https://github.com/42ity/libzmq.git"
            release = "4.2.0-FTY-master" >

                <use project = "libsodium" prefix = "sodium"
                repository = "https://github.com/42ity/libsodium.git"
                release = "1.0.5-FTY-master"
                test = "sodium_init" />
            </use>
        </use>

        <use project = "malamute" min_major = "1" test = "mlm_server_test"
        repository="https://github.com/42ity/malamute.git"
        release = "1.0-FTY-master"
        />

        <use project = "fty-common-logging" libname = "libfty_common_logging" header="fty_log.h"
        repository = "https://github.com/42ity/fty-common-logging.git"
        release = "master"
        test = "fty_common_logging_selftest" >

            <use project = "log4cplus" header = "log4cplus/logger.h" test = "appender_test"
            repository = "https://github.com/42ity/log4cplus.git"
            release = "1.1.2-FTY-master"
            />
        </use>
    </use>

    <use project = "lua-5.1" />

    <!-- alert engine uses patched cxxtools, point to 42ity fork instead -->
    <use project = "cxxtools" test="cxxtools::Utf8Codec::Utf8Codec" header="cxxtools/allocator.h"
        repository = "https://github.com/42ity/cxxtools.git"
        release = "2.2-FTY-master"
        />

    <use project = "fty-common" libname = "libfty_common" header="fty_common.h"
        repository = "https://github.com/42ity/fty-common.git"
        release = "master"
        test = "fty_common_selftest" >

        <use project = "fty-common-logging" libname = "libfty_common_logging" header="fty_log.h"
        repository = "https://github.com/42ity/fty-common-logging.git"
        release = "master"
        test = "fty_common_logging_selftest" >

            <use project = "log4cplus" header = "log4cplus/logger.h" test = "appender_test"
            repository = "https://github.com/42ity/log4cplus.git"
            release = "1.1.2-FTY-master"
            />
        </use>
    </use>

    <class name = "metriclist" private="1" selftest="0">MetricList</class>
    <class name = "alertconfiguration" private="1">alertconfiguration</class>
    <class name = "luarule" private="1" selftest = "0">luaRule</class>
    <class name = "purealert" private="1" selftest = "0">PureAlert</class>
    <class name = "rule" private="1" selftest = "0">Rule</class>
    <class name = "thresholdrulecomplex" private="1" selftest = "0">ThresholdRuleComplex</class>
    <class name = "utils" state = "stable">Utils</class>
    <class name = "Autoconfig" state = "stable">Autoconfig</class>
    <class name = "RuleConfigurator" private = "1" selftest = "0">Rule Configurator</class>
    <class name = "TemplateRuleConfigurator" private="1" selftest="0">Template rule configurator</class>
    <class name = "fty_alert_engine_server" state = "stable" >Actor evaluating rules</class>
    <class name = "fty_alert_actions" state = "stable" >Actor performing actions on alert (sending notifications)</class>
    <header name = "normalrule" private="1" >normalrule</header>
    <header name = "thresholdrulesimple" private="1" >thresholdrulesimple</header>
    <header name = "thresholdruledevice" private="1" >thresholdruledevice</header>
    <header name = "regexrule" private="1" >regexrule</header>
    <main name = "fty-alert-engine" service = "1">
        Daemon evaluating rules and producing alerts
    </main>
</project>
